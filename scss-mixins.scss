/* -------------------------------------------------------------
  Scss CSS3 Mixins! 
  By: Carlos March, http://www.carlosmarch.es, @carlosmarch__
  List of Scss Mixins File to be @imported and @included
------------------------------------------------------------- */

/// Adds a browser prefix to the property
/// @param {*} $property Property
/// @param {*} $value Value
/// Usage css3-prefix(transition, all 0.2s ease-in)

@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
   -khtml-#{$property}: #{$value};
     -moz-#{$property}: #{$value};
      -ms-#{$property}: #{$value};
       -o-#{$property}: #{$value};
          #{$property}: #{$value};
}


/// Adds a transition cross-browser
/// @param {Property} $property [all time ease]
/// Usage transition(all 0.2s ease-in)

@mixin transition($property) {
  @include css3-prefix('transition', $property );
}



/// Set a rem font size with pixel fallback
/// @param {Property} $property [14px]
/// Usage @include font-size(14px)

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/// Rounded corners
/// @param {Property} $property [14px]
/// Usage rounded-corners($corners: 0 0 0 0)

@mixin rounded-corners ($corners: 0 0 0 0) {
  $top-left: nth($corners, 1);
  $top-right: nth($corners, 2);
  $bottom-right: nth($corners, 3);
  $bottom-left: nth($corners, 4);

  border-top-left-radius: $top-left;
  border-top-right-radius: $top-right;
  border-bottom-right-radius: $bottom-right;
  border-bottom-left-radius: $bottom-left;

}



/// Generates a css class from every element in nested list
/// @param {Property Value} 

$colors : blue #00CAFF, deepblue #445D95;
            
@each $color in $colors {
  $name : nth($color, 1);
  $hex : nth($color, 2);
  .cl-#{$name}{ color: $hex;}
  .cl-#{$name}-dark{ color: darken($hex, 20%);}
  .bg-#{$name}{background: $hex;}
  .bg-#{$name}-dark{background: darken($hex, 20%);}
}

/// Breakpoints
/// Usage @include breakpoint(small) { width: 95%; }
@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (min-width: 50em) { @content; }
  }
  @else if $point == small {
    @media (min-width: 37.5em)  { @content; }
  }
}



/// Clearfix
/// Usage @include clearfix();
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}
